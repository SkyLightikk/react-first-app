{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onChange","e","target","value","setState","props","onSearchChange","type","placeholder","this","Component","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","important","classNames","onClick","TodoList","todos","elements","map","item","id","itemProps","key","ItemStatusFilter","buttons","name","filter","onFilterChange","classNameButton","ItemAddForm","onLabelChange","toUpperCase","onSubmit","preventDefault","onAdded","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","slice","addItem","text","newItem","toggleProperty","onSearch","items","length","toLowerCase","includes","arr","propName","oldItem","doneCount","todoCount","visibleItems","onFilter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee419265.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;\r\n","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n  return (\r\n    <div className=\"app-header d-flex\">\r\n      <h1>Todo List</h1>\r\n      <h2>{toDo} more to do, {done} done</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;\r\n","import React, { Component } from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n\r\n\r\n  state = {\r\n    term : ''\r\n  }\r\n\r\n  onChange = (e) => {\r\n    const term = e.target.value;\r\n    this.setState({term});\r\n    this.props.onSearchChange(term);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <input type=\"text\"\r\n                className=\"form-control search-input\"\r\n                placeholder=\"type to search\"\r\n                onChange={this.onChange}\r\n                value={this.state.term} />\r\n    );\r\n  }\r\n}\r\n","import TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem;\r\n","import React, { Component } from 'react';\r\nimport './todo-list-item.css';\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n  render() {\r\n    const { label, onDeleted,\r\n            onToggleImportant,\r\n            onToggleDone, important, done } = this.props;\r\n\r\n    let classNames = 'todo-list-item';\r\n    if (done) {\r\n      classNames += ' done';\r\n    }\r\n\r\n    if (important) {\r\n      classNames += ' important';\r\n    }\r\n  \r\n    return (\r\n      <span className={classNames}>\r\n        <span\r\n          className=\"todo-list-item-label\"\r\n          onClick={onToggleDone}>\r\n          {label}\r\n        </span>\r\n  \r\n        <button type=\"button\"\r\n                className=\"btn btn-outline-success btn-sm float-right\"\r\n                onClick={onToggleImportant}>\r\n          <i className=\"fa fa-exclamation\" />\r\n        </button>\r\n  \r\n        <button type=\"button\"\r\n                className=\"btn btn-outline-danger btn-sm float-right\"\r\n                onClick={onDeleted}>                \r\n          <i className=\"fa fa-trash-o\" />\r\n        </button>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n","import TodoList from './todo-list';\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ todos, onDeleted,\r\n                    onToggleImportant,\r\n                    onToggleDone }) => {\r\n\r\n  const elements = todos.map((item) => {\r\n    const { id, ...itemProps } = item;\r\n\r\n    return (\r\n      <li key={id} className=\"list-group-item\">\r\n        <TodoListItem \r\n          {...itemProps }\r\n          onDeleted={() => onDeleted(id)}\r\n          onToggleImportant={() => onToggleImportant(id)}\r\n          onToggleDone={() => onToggleDone(id)}/>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <ul className=\"list-group todo-list\">\r\n      { elements }\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default ItemStatusFilter;\r\n","import React, { Component } from 'react';\r\nimport './item-status-filter.css';\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n  buttons = [\r\n    {name: 'all', label: 'All'},\r\n    {name: 'active', label: 'Active'},\r\n    {name: 'done', label: 'Done'}\r\n  ];\r\n\r\n\r\n  render() {\r\n\r\n    const { filter, onFilterChange } = this.props;\r\n\r\n    const buttons = this.buttons.map(({name, label}) => {\r\n      const isActive = filter === name;\r\n      const classNameButton = isActive ? 'btn-info' : 'btn-outline-secondary';\r\n      return (\r\n        <button type=\"button\"\r\n                className={`btn ${classNameButton}`}\r\n                key={name}\r\n                onClick={() => onFilterChange(name)}>\r\n          {label}\r\n        </button>\r\n      );\r\n    });\r\n\r\n\r\n    return (\r\n      <div className=\"btn-group\">\r\n       {buttons}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;","import React, { Component } from 'react';\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n\r\n  state = {\r\n    label: ''\r\n  };\r\n\r\n  onLabelChange = (e) => {\r\n    this.setState({\r\n      label: e.target.value.toUpperCase()\r\n    });\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onAdded(this.state.label);\r\n    this.setState(({label}) => {\r\n      return {\r\n        label: ''\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"item-add-form d-flex\"\r\n            onSubmit={this.onSubmit}>\r\n        <input type=\"text\"\r\n                className=\"form-control\"\r\n                onChange={this.onLabelChange}\r\n                placeholder=\"What needs to be done\"\r\n                value={this.state.label}/>\r\n        <button type=\"button\" className=\"btn btn-outline-secondary\"\r\n          >      \r\n          Добавить\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}","import App from './app';\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport TodoList from '../todo-list';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport ItemAddForm from '../item-add-form';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n\r\n  maxId = 100;\r\n\r\n  state = {\r\n    todoData: [\r\n      this.createTodoItem('Drink Coffee'),\r\n      this.createTodoItem('Make Awesome App'),\r\n      this.createTodoItem('Have a lunch')\r\n    ],\r\n    term: '',\r\n    filter: 'all' // active, all, done\r\n  };\r\n\r\n  createTodoItem(label) {\r\n    return { \r\n        label: label,\r\n        important: false,\r\n        done: false,\r\n        id: this.maxId++ \r\n    };\r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(({todoData}) => {\r\n      const idx = todoData.findIndex((el) => el.id === id );\r\n\r\n      const newArray = [\r\n        ...todoData.slice(0, idx), \r\n        ...todoData.slice(idx + 1)\r\n      ];\r\n\r\n      return {\r\n        todoData: newArray\r\n      }\r\n    });\r\n  };\r\n\r\n  addItem = (text) => {\r\n    const newItem = this.createTodoItem(text);\r\n    \r\n    this.setState(({todoData}) => {\r\n      const newArr = [\r\n        ...todoData,\r\n        newItem\r\n      ];\r\n      return ({\r\n        todoData: newArr\r\n      });\r\n    });\r\n  };\r\n\r\n  toggleProperty(arr, id ,propName) {\r\n    const idx = arr.findIndex((el) => el.id === id );\r\n    //update object\r\n    const oldItem = arr[idx];\r\n    const newItem = {...oldItem, [propName]: !oldItem[propName]};\r\n\r\n    //construct new array\r\n    return [\r\n      ...arr.slice(0, idx),\r\n      newItem,\r\n      ...arr.slice(idx + 1)\r\n    ];\r\n  }\r\n\r\n  onToggleImportant = (id) => {\r\n    this.setState(({todoData}) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'important')\r\n      };\r\n    });\r\n  };\r\n  onToggleDone = (id) => {\r\n    this.setState(({todoData}) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'done')\r\n      };\r\n    });\r\n  };\r\n\r\n  onSearch = (items, term) => {\r\n    if(term.length === 0) {\r\n      return items;\r\n    }\r\n    const visibleItems = items.filter((item) => \r\n                    item.label.toLowerCase().includes(term.toLowerCase()));\r\n    return visibleItems;\r\n\r\n  }\r\n\r\n  onFilter(items, filter) {\r\n    switch(filter) {\r\n      case 'all':\r\n        return items;\r\n      case 'active': \r\n        return items.filter((item) => !item.done);\r\n      case 'done' :\r\n        return items.filter((item) => item.done);\r\n      default :\r\n        return items;\r\n    }\r\n  }\r\n\r\n  onSearchChange = (term) => {\r\n    this.setState({term});\r\n  }\r\n\r\n  onFilterChange = (filter) => {\r\n    this.setState({filter});\r\n  }\r\n\r\n  render() {\r\n    const {todoData, term, filter} = this.state;\r\n    const doneCount = todoData\r\n                      .filter((el) => el.done).length;\r\n\r\n    const todoCount = todoData.length - doneCount;\r\n    const visibleItems = \r\n    this.onFilter(this.onSearch(todoData, term), filter);\r\n\r\n    return (\r\n      <div className=\"todo-app\">\r\n        <AppHeader toDo={todoCount} done={doneCount} />\r\n        <div className=\"top-panel d-flex\">\r\n          <SearchPanel onSearchChange={this.onSearchChange}/>\r\n          <ItemStatusFilter \r\n          filter={filter}\r\n          onFilterChange={this.onFilterChange}/>\r\n        </div>\r\n  \r\n        <TodoList todos={visibleItems}\r\n          onDeleted={ this.deleteItem }\r\n          onToggleImportant={this.onToggleImportant}\r\n          onToggleDone={this.onToggleDone} />\r\n        <ItemAddForm\r\n          onAdded={this.addItem}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/app';\r\n\r\nReactDOM.render(<App />,\r\n  document.getElementById('root'));\r\n"],"sourceRoot":""}